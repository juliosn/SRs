/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import conexao.Conexao;
import controle.login;
import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author werlang
 */
public class frm_gerenc_porteiros extends javax.swing.JFrame {

    /**
     * @return the num_acesso
     */
    public int getNum_acesso() {
        return num_acesso;
    }

    /**
     * @param num_acesso the num_acesso to set
     */
    public void setNum_acesso(int num_acesso) {
        this.num_acesso = num_acesso;
    }

    private int num_acesso;
    
    private int id_port;
    
    /**
     * @return the id_port
     */
    public int getId_port() {
        return id_port;
    }

    /**
     * @param id_port the id_port to set
     */
    public void setId_port(int id_port) {
        this.id_port = id_port;
    }
    
    private int id_user;
    
    /**
     * @return the id_user
     */
    public int getId_user() {
        return id_user;
    }

    /**
     * @param id_user the id_user to set
     */
    public void setId_user(int id_user) {
        this.id_user = id_user;
    }

    private int id_cond;

    
    
    //Objeto com atributos da classe Connection. Finalidade: Ligação com Banco de Dados.
    Connection con = null;
    
    //Objeto com atributos da classe ResultSet. Finalidade: Procura dos registros do banco.
    ResultSet rs = null;
    
    /*Objeto com atributos da classe PreparedStatement. 
    Finalidade: Adicionar os dados inseridos pelo usuário na busca de dados do banco.*/
    PreparedStatement ps = null;
    
    /**
     * Creates new form frm_gerenc_porteiros
     */
    public frm_gerenc_porteiros(int realId) {
        initComponents();
        con = Conexao.conecta();
        initVars(realId);
        logo();
        try 
        {
            String pesquisa = "SELECT usuario.nome, usuario.num_acesso, usuario.senha, porteiro.turno " +
                    "FROM porteiro " +
                    "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                    "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? " +
                    "ORDER BY id_condominio";
            ps = con.prepareStatement(pesquisa);
            ps.setInt(1, id_cond);
            rs = ps.executeQuery();
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "Dados não localizados!", "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
        }
        preencherTabela();
    }
    
    //Método initVars() responsável por passar parâmetros de dados do usuário e
    //adicioná-los em atributos locais (da classe):
    private void initVars(int realId)
    {
        id_cond = realId;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        back1 = new javax.swing.JPanel();
        back2 = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        btn_home = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        back3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_port_atv = new javax.swing.JTable();
        btn_Criar = new javax.swing.JButton();
        btn_Alterar = new javax.swing.JButton();
        btn_Inativar = new javax.swing.JButton();
        lbl_Titulo = new javax.swing.JLabel();
        tfSenha = new javax.swing.JTextField();
        tfNome = new javax.swing.JTextField();
        tfNumAcess = new javax.swing.JTextField();
        jcb_turno = new javax.swing.JComboBox<>();
        btn_gerenc_cond = new javax.swing.JButton();
        btn_gerenc_port = new javax.swing.JButton();
        btn_cond_in = new javax.swing.JButton();
        btn_port_in = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back1.setBackground(new java.awt.Color(11, 25, 49));

        back2.setBackground(new java.awt.Color(11, 25, 49));

        btn_home.setBackground(new java.awt.Color(51, 121, 241));
        btn_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button/home.png"))); // NOI18N
        btn_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeActionPerformed(evt);
            }
        });

        btn_exit.setBackground(new java.awt.Color(51, 121, 241));
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/button/exit.png"))); // NOI18N
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout back2Layout = new javax.swing.GroupLayout(back2);
        back2.setLayout(back2Layout);
        back2Layout.setHorizontalGroup(
            back2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(back2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_home, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        back2Layout.setVerticalGroup(
            back2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, back2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(back2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(back2Layout.createSequentialGroup()
                        .addGap(12, 147, Short.MAX_VALUE)
                        .addGroup(back2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_home, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        back3.setBackground(new java.awt.Color(212, 223, 253));

        tbl_port_atv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Número de Acesso", "Senha", "Turno"
            }
        ));
        tbl_port_atv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_port_atvMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_port_atv);

        btn_Criar.setBackground(new java.awt.Color(51, 121, 241));
        btn_Criar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Criar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Criar.setText("Criar");
        btn_Criar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CriarActionPerformed(evt);
            }
        });

        btn_Alterar.setBackground(new java.awt.Color(51, 121, 241));
        btn_Alterar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Alterar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Alterar.setText("Alterar");
        btn_Alterar.setEnabled(false);
        btn_Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AlterarActionPerformed(evt);
            }
        });

        btn_Inativar.setBackground(new java.awt.Color(51, 121, 241));
        btn_Inativar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Inativar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Inativar.setText("Inativar");
        btn_Inativar.setEnabled(false);
        btn_Inativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InativarActionPerformed(evt);
            }
        });

        lbl_Titulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl_Titulo.setForeground(new java.awt.Color(11, 25, 49));
        lbl_Titulo.setText("PORTEIROS ATIVOS\n");

        tfSenha.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tfSenha.setForeground(new java.awt.Color(153, 153, 153));
        tfSenha.setText("Digite a Senha...");
        tfSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfSenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfSenhaFocusLost(evt);
            }
        });
        tfSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSenhaActionPerformed(evt);
            }
        });

        tfNome.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tfNome.setForeground(new java.awt.Color(153, 153, 153));
        tfNome.setText("Digite o Nome...");
        tfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomeFocusLost(evt);
            }
        });

        tfNumAcess.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tfNumAcess.setForeground(new java.awt.Color(153, 153, 153));
        tfNumAcess.setText("Digite o Número...");
        tfNumAcess.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNumAcessFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNumAcessFocusLost(evt);
            }
        });
        tfNumAcess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNumAcessKeyTyped(evt);
            }
        });

        jcb_turno.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jcb_turno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manhã", "Tarde", "Noite" }));

        javax.swing.GroupLayout back3Layout = new javax.swing.GroupLayout(back3);
        back3.setLayout(back3Layout);
        back3Layout.setHorizontalGroup(
            back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(back3Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, back3Layout.createSequentialGroup()
                        .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNome)
                            .addComponent(tfSenha))
                        .addGap(85, 85, 85)
                        .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNumAcess)
                            .addComponent(jcb_turno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(back3Layout.createSequentialGroup()
                        .addComponent(lbl_Titulo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(back3Layout.createSequentialGroup()
                        .addComponent(btn_Criar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Inativar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(170, 170, 170))
        );
        back3Layout.setVerticalGroup(
            back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(back3Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNumAcess, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jcb_turno))
                .addGap(75, 75, 75)
                .addGroup(back3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Criar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Inativar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbl_Titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        btn_gerenc_cond.setBackground(new java.awt.Color(51, 121, 241));
        btn_gerenc_cond.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_gerenc_cond.setForeground(new java.awt.Color(255, 255, 255));
        btn_gerenc_cond.setText("<html>  \n<center>  \nGerenciamento <br/> de Condomínios \n</center> \n</html>");
        btn_gerenc_cond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerenc_condActionPerformed(evt);
            }
        });

        btn_gerenc_port.setBackground(new java.awt.Color(0, 53, 143));
        btn_gerenc_port.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_gerenc_port.setForeground(new java.awt.Color(255, 255, 255));
        btn_gerenc_port.setText("<html> \n<center> \nGerenciamento <br/> dos Porteiros\n</center>\n</html>");
        btn_gerenc_port.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerenc_portActionPerformed(evt);
            }
        });

        btn_cond_in.setBackground(new java.awt.Color(51, 121, 241));
        btn_cond_in.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_cond_in.setForeground(new java.awt.Color(255, 255, 255));
        btn_cond_in.setText("<html> \n<center> \nCondomínios <br/> Inativados\n</center>\n</html>");
        btn_cond_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cond_inActionPerformed(evt);
            }
        });

        btn_port_in.setBackground(new java.awt.Color(51, 121, 241));
        btn_port_in.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_port_in.setForeground(new java.awt.Color(255, 255, 255));
        btn_port_in.setText("<html> \n<center> \nPorteiros <br/> Inativados\n</center>\n</html>");
        btn_port_in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_port_inActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout back1Layout = new javax.swing.GroupLayout(back1);
        back1.setLayout(back1Layout);
        back1Layout.setHorizontalGroup(
            back1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(back1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(back1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_gerenc_cond, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_gerenc_port, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cond_in, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_port_in, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(back3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        back1Layout.setVerticalGroup(
            back1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(back1Layout.createSequentialGroup()
                .addComponent(back2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(back1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(back1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(back1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btn_gerenc_cond, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btn_gerenc_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btn_cond_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btn_port_in, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_gerenc_condActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerenc_condActionPerformed
        // TODO add your handling code here:
        frm_gerenc_condominio mostra = new frm_gerenc_condominio();
        mostra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_gerenc_condActionPerformed

    private void btn_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeActionPerformed
        login mostra = new login();
        mostra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_homeActionPerformed

    private void tfSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSenhaActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_gerenc_portActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerenc_portActionPerformed
        String tipoTelaPort = "ativos";
        frm_pre_gporteiros mostra = new frm_pre_gporteiros(tipoTelaPort);
        mostra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_gerenc_portActionPerformed

    private void btn_cond_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cond_inActionPerformed
        frm_cond_inativos mostra = new frm_cond_inativos();
        mostra.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_cond_inActionPerformed

    private void btn_port_inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_port_inActionPerformed
        String tipoTelaPort = "inativos";
        frm_pre_gporteiros mostra = new frm_pre_gporteiros(tipoTelaPort);
        mostra.setVisible(true);
        dispose();

    }//GEN-LAST:event_btn_port_inActionPerformed

    private void btn_CriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CriarActionPerformed
        String nome = tfNome.getText();
        String num_acesso = tfNumAcess.getText();
        String senha = tfSenha.getText();
        String turno = (String) jcb_turno.getSelectedItem();
        
        if("Digite o Nome...".equals(nome) || "Digite o Número...".equals(num_acesso) || "Digite a Senha...".equals(senha) )
        {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos solicitados!", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
        }
        else if (senha.length() < 8 || !senha.matches(".*\\d.*") || !senha.matches(".*[a-zA-Z].*"))
        {
            JOptionPane.showMessageDialog(null, "A senha deve ter no mínimo 8 caracteres e conter pelo menos um número e uma letra.", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int num_acesso_valor = Integer.parseInt(num_acesso);
                try
                    {
                        // Verificar se o número de acesso já existe no banco
                        String check_sql = "SELECT COUNT(*) FROM usuario WHERE num_acesso = ?";
                        ps = con.prepareStatement(check_sql);
                        ps.setInt(1, num_acesso_valor);
                        rs = ps.executeQuery();
                        rs.next();
                        int count = rs.getInt(1);

                        if (count > 0) {
                            JOptionPane.showMessageDialog(null, "O número de acesso já está em uso por outro usuário.", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
                        }
                        else
                        {
                            //Comando SQL:
                            String insert_sql_user="INSERT into usuario (nome,num_acesso,senha) values ('" + nome + "','" + num_acesso + "','" + senha + "')";

                            //Execução do comando SQL:
                            ps.executeUpdate(insert_sql_user);

                            String pesquisa = "SELECT * FROM usuario WHERE num_acesso = ?"; // Usando um parâmetro

                            ps = con.prepareStatement(pesquisa);
                            ps.setInt(1, num_acesso_valor);
                            rs = ps.executeQuery();
                            if(rs.next()){
                                setId_user(rs.getInt("id_usuario"));
                            }

                            //Comando SQL:
                            String insert_sql_port="INSERT into porteiro (id_condominio,id_usuario,turno) values ('" + id_cond + "','" + getId_user() + "','" + turno + "')";

                            //Execução do comando SQL:
                            ps.executeUpdate(insert_sql_port);

                            //Informando gravação realizada com sucesso:
                            JOptionPane.showMessageDialog(null, "Gravação Realizada com sucesso!!!", "Mensagem do programa", JOptionPane.INFORMATION_MESSAGE);

                            String atualizar = "SELECT usuario.nome, usuario.num_acesso, usuario.senha, porteiro.turno " +
                                    "FROM porteiro " +
                                    "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                                    "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? " +
                                    "ORDER BY id_condominio";
                            ps = con.prepareStatement(atualizar);
                            ps.setInt(1, id_cond);
                            rs = ps.executeQuery();                        
                            rs.first();

                            //Chamando o Método preencherTabela():
                            preencherTabela();

                            //Chamando o Método limparCampos():
                            limparCampos();

                        }
                    }
                    catch(SQLException errosql)
                    {
                        JOptionPane.showMessageDialog(null, "\n Erro ao gravar os dados" + errosql, "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
                    }               
        }
    }//GEN-LAST:event_btn_CriarActionPerformed

    private void btn_AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AlterarActionPerformed
        String nome = tfNome.getText();
        String num_acesso = tfNumAcess.getText();
        String senha = tfSenha.getText();
        String turno = (String) jcb_turno.getSelectedItem();
        
        if("Digite o Nome...".equals(nome) || "Digite o Número...".equals(num_acesso) || "Digite a Senha...".equals(senha) )
        {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos solicitados!", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
        }
        else if (senha.length() < 8 || !senha.matches(".*\\d.*") || !senha.matches(".*[a-zA-Z].*"))
        {
            JOptionPane.showMessageDialog(null, "A senha deve ter no mínimo 8 caracteres e conter pelo menos um número e uma letra.", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int num_acesso_valor = Integer.parseInt(num_acesso);
                try
                    {
                        // Verificar se o número de acesso já existe no banco
                        String check_sql = "SELECT COUNT(*) FROM usuario WHERE num_acesso = ?";
                        ps = con.prepareStatement(check_sql);
                        ps.setInt(1, num_acesso_valor);
                        rs = ps.executeQuery();
                        rs.next();
                        int count = rs.getInt(1);

                        if (count > 0)
                        {
                            if(getNum_acesso() != num_acesso_valor)
                            {
                                JOptionPane.showMessageDialog(null, "O número de acesso já está em uso por outro usuário.", "Mensagem do Programa", JOptionPane.ERROR_MESSAGE);
                            }
                            else
                            {
                                //Comando SQL:
                                String update_sql_user="UPDATE usuario SET nome = ?, num_acesso = ?, senha = ? WHERE id_usuario = ?";

                                ps = con.prepareStatement(update_sql_user);
                                ps.setString(1, nome);
                                ps.setInt(2, num_acesso_valor);
                                ps.setString(3, senha);
                                ps.setInt(4, getId_user());

                                //Execução do comando SQL:
                                ps.executeUpdate();

                                //Comando SQL:
                                String update_sql_port="UPDATE porteiro SET turno = ? WHERE id_usuario = ? AND id_porteiro = ?";

                                ps = con.prepareStatement(update_sql_port);

                                ps.setString(1, turno);
                                ps.setInt(2, getId_user());
                                ps.setInt(3, getId_port());

                                //Execução do comando SQL:
                                ps.executeUpdate();


                                //Informando gravação realizada com sucesso:
                                JOptionPane.showMessageDialog(null, "Atualização Realizada com sucesso!!!", "Mensagem do programa", JOptionPane.INFORMATION_MESSAGE);

                                String atualizar = "SELECT usuario.nome, usuario.num_acesso, usuario.senha, porteiro.turno " +
                                        "FROM porteiro " +
                                        "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                                        "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? " +
                                        "ORDER BY id_condominio";
                                ps = con.prepareStatement(atualizar);
                                ps.setInt(1, id_cond);
                                rs = ps.executeQuery();                        
                                rs.first();

                                //Chamando o Método preencherTabela():
                                preencherTabela();

                                //Chamando o Método limparCampos():
                                limparCampos();
                                btn_Criar.setEnabled(true);
                                btn_Alterar.setEnabled(false);
                                btn_Inativar.setEnabled(false);                            
                            }                            
                        }
                        else
                        {
                            //Comando SQL:
                            String update_sql_user="UPDATE usuario SET nome = ?, num_acesso = ?, senha = ? WHERE id_usuario = ?";
                            
                                ps = con.prepareStatement(update_sql_user);
                                ps.setString(1, nome);
                                ps.setInt(2, num_acesso_valor);
                                ps.setString(3, senha);
                                ps.setInt(4, getId_user());

                                //Execução do comando SQL:
                                ps.executeUpdate();

                                //Comando SQL:
                                String update_sql_port="UPDATE porteiro SET turno = ? WHERE id_usuario = ? AND id_porteiro = ?";

                                ps = con.prepareStatement(update_sql_port);

                                ps.setString(1, turno);
                                ps.setInt(2, getId_user());
                                ps.setInt(3, getId_port());

                                //Execução do comando SQL:
                                ps.executeUpdate();


                                //Informando gravação realizada com sucesso:
                                JOptionPane.showMessageDialog(null, "Atualização Realizada com sucesso!!!", "Mensagem do programa", JOptionPane.INFORMATION_MESSAGE);

                                String atualizar = "SELECT usuario.nome, usuario.num_acesso, usuario.senha, porteiro.turno " +
                                        "FROM porteiro " +
                                        "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                                        "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? " +
                                        "ORDER BY id_condominio";
                                ps = con.prepareStatement(atualizar);
                                ps.setInt(1, id_cond);
                                rs = ps.executeQuery();                        
                                rs.first();

                                //Chamando o Método preencherTabela():
                                preencherTabela();

                                //Chamando o Método limparCampos():
                                limparCampos();
                                btn_Criar.setEnabled(true);
                                btn_Alterar.setEnabled(false);
                                btn_Inativar.setEnabled(false);                            
                            }                            
                    }
                    catch(SQLException errosql)
                    {
                        JOptionPane.showMessageDialog(null, "\n Erro ao gravar os dados" + errosql, "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
                    }               
        }
    }//GEN-LAST:event_btn_AlterarActionPerformed

    private void btn_InativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InativarActionPerformed
                try
                    {
                        //Comando SQL:
                        String update_sql_user="UPDATE usuario SET situacao = 'inativo' WHERE id_usuario = ?";

                        ps = con.prepareStatement(update_sql_user);
                        ps.setInt(1, getId_user());
                        
                        //Execução do comando SQL:
                        ps.executeUpdate();

                        
                        //Informando gravação realizada com sucesso:
                        JOptionPane.showMessageDialog(null, "Inativação Realizada com sucesso!!!", "Mensagem do programa", JOptionPane.INFORMATION_MESSAGE);

                        String atualizar = "SELECT usuario.nome, usuario.num_acesso, usuario.senha, porteiro.turno " +
                                "FROM porteiro " +
                                "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                                "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? " +
                                "ORDER BY id_condominio";
                        ps = con.prepareStatement(atualizar);
                        ps.setInt(1, id_cond);
                        rs = ps.executeQuery();                        
                        rs.first();

                        //Chamando o Método preencherTabela():
                        preencherTabela();

                        //Chamando o Método limparCampos():
                        limparCampos();
                        btn_Criar.setEnabled(true);
                        btn_Alterar.setEnabled(false);
                        btn_Inativar.setEnabled(false);
                        
                    }
                    catch(SQLException errosql)
                    {
                        JOptionPane.showMessageDialog(null, "\n Erro ao gravar os dados" + errosql, "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
                    }
    }//GEN-LAST:event_btn_InativarActionPerformed

    private void tbl_port_atvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_port_atvMouseClicked
        int linha_selecionada = tbl_port_atv.getSelectedRow();
        btn_Criar.setEnabled(false);
        btn_Alterar.setEnabled(true);
        btn_Inativar.setEnabled(true);
        
        tfNome.setText(tbl_port_atv.getValueAt(linha_selecionada, 0).toString());
        tfNome.setForeground(new Color(0, 0, 0));
        
        tfNumAcess.setText(tbl_port_atv.getValueAt(linha_selecionada, 1).toString());
        tfNumAcess.setForeground(new Color(0, 0, 0));
        
        tfSenha.setText(tbl_port_atv.getValueAt(linha_selecionada, 2).toString());
        tfSenha.setForeground(new Color(0, 0, 0));
        
        int valor_numacesso = Integer.parseInt(tfNumAcess.getText());
        
        jcb_turno.setSelectedItem(tbl_port_atv.getValueAt(linha_selecionada, 3).toString());
        
        try
        {
                        String pesquisar = "SELECT usuario.id_usuario, porteiro.id_porteiro, usuario.num_acesso " +
                                "FROM porteiro " +
                                "INNER JOIN usuario ON porteiro.id_usuario = usuario.id_usuario " +
                                "WHERE usuario.situacao = 'ativo' AND porteiro.id_condominio = ? AND usuario.num_acesso = ? " +
                                "ORDER BY id_condominio";
                        ps = con.prepareStatement(pesquisar);
                        ps.setInt(1, id_cond);
                        ps.setInt(2, valor_numacesso);
                        rs = ps.executeQuery();                        

                        if(rs.next()){
                            setId_port(rs.getInt("id_porteiro"));
                            setId_user(rs.getInt("id_usuario"));
                            setNum_acesso(rs.getInt("num_acesso"));
                        }
        }
        catch(SQLException errosql)
        {
            JOptionPane.showMessageDialog(null, "\n Erro ao gravar os dados" + errosql, "Mensagem do Programa", JOptionPane.INFORMATION_MESSAGE);
        }               
    }//GEN-LAST:event_tbl_port_atvMouseClicked

    private void tfNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusGained
        if(tfNome.getText().equals("Digite o Nome..."))
        {
            tfNome.setText("");
            tfNome.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_tfNomeFocusGained

    private void tfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusLost
        if(tfNome.getText().equals(""))
        {
            tfNome.setText("Digite o Nome...");
            tfNome.setForeground(new Color(153,153,153));
        }    
    }//GEN-LAST:event_tfNomeFocusLost

    private void tfNumAcessFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumAcessFocusGained
        if(tfNumAcess.getText().equals("Digite o Número..."))
        {
            tfNumAcess.setText("");
            tfNumAcess.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_tfNumAcessFocusGained

    private void tfNumAcessFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumAcessFocusLost
        if(tfNumAcess.getText().equals(""))
        {
            tfNumAcess.setText("Digite o Número...");
            tfNumAcess.setForeground(new Color(153,153,153));
        }    
    }//GEN-LAST:event_tfNumAcessFocusLost

    private void tfSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSenhaFocusGained
        if(tfSenha.getText().equals("Digite a Senha..."))
        {
            tfSenha.setText("");
            tfSenha.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_tfSenhaFocusGained

    private void tfSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSenhaFocusLost
        if(tfSenha.getText().equals(""))
        {
            tfSenha.setText("Digite a Senha...");
            tfSenha.setForeground(new Color(153,153,153));
        }    
    }//GEN-LAST:event_tfSenhaFocusLost

    private void tfNumAcessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumAcessKeyTyped
        String caracteres = "0123456789";
        if(!caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_tfNumAcessKeyTyped

    private void logo(){
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/img/logo/SRs.png"));
        Image scaleImage = imageIcon.getImage().getScaledInstance(170, 170,Image.SCALE_DEFAULT);
        ImageIcon img = new ImageIcon(scaleImage);
        lblLogo.setIcon(img);
    }

    //Esse método chama os componentes da tabela do banco, e os coloca no jtable:
    private void preencherTabela(){
        tbl_port_atv.getColumnModel().getColumn(0).setPreferredWidth(120);
        tbl_port_atv.getColumnModel().getColumn(1).setPreferredWidth(60);
        tbl_port_atv.getColumnModel().getColumn(2).setPreferredWidth(60);
        tbl_port_atv.getColumnModel().getColumn(3).setPreferredWidth(60);
        
        DefaultTableModel modelo = (DefaultTableModel) tbl_port_atv.getModel();
        modelo.setNumRows(0);
        
        try 
        {
            rs.beforeFirst();
            while(rs.next())
            {
                modelo.addRow
                (
                        new Object[]
                        {
                            rs.getString("nome"), rs.getString("num_acesso"), rs.getString("senha"), rs.getString("turno")
                        }
                );
            }
        }
        catch(SQLException erro)
        {
            JOptionPane.showMessageDialog(null,"\n Erro ao listar dados da tabela!! :\n ","Mensagem do Programa",JOptionPane.INFORMATION_MESSAGE);
        }

    }
    
    //Esse método redefine os campos presentes na interface, voltando para o seu estado inicial:
    private void limparCampos()
    {
        tfNome.setText("Digite o Nome...");
        tfNome.setForeground(new Color(153,153,153));
        tfNumAcess.setText("Digite o Número...");
        tfNumAcess.setForeground(new Color(153,153,153));
        tfSenha.setText("Digite a Senha...");
        tfSenha.setForeground(new Color(153,153,153));
        jcb_turno.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel back1;
    private javax.swing.JPanel back2;
    private javax.swing.JPanel back3;
    private javax.swing.JButton btn_Alterar;
    private javax.swing.JButton btn_Criar;
    private javax.swing.JButton btn_Inativar;
    private javax.swing.JButton btn_cond_in;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_gerenc_cond;
    private javax.swing.JButton btn_gerenc_port;
    private javax.swing.JButton btn_home;
    private javax.swing.JButton btn_port_in;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcb_turno;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lbl_Titulo;
    private javax.swing.JTable tbl_port_atv;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfNumAcess;
    private javax.swing.JTextField tfSenha;
    // End of variables declaration//GEN-END:variables
}
